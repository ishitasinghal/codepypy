Problem Statement

The task is to count all the possible paths from top left to bottom 
right of a mXn matrix with the constraints that from each cell you 
can either move only to right or down.

Input: 

First line consists of T test cases. First line of every test case 
consists of N and M, denoting the number of rows and number of column 
respectively.

Output: 

Single line output i.e count of all the possible paths from top left 
to bottom right of a mXn matrix. Since output can be very large number 
use %10^9+7.

Example:

Input:

1
3 3

Output:

6

#CODE

def path(n, m):
    cache = [[0]*m for i in range(n)]
    for i in range(n):
        cache[i][-1] = 1
    for i in range(m):
        cache[-1][i] = 1
        
    for i in reversed(range(0, n-1)):
        for j in reversed(range(0, m-1)):
            cache[i][j] = (cache[i+1][j] + cache[i][j+1])%(pow(10,9)+7)
            
    return cache[0][0]
    
testcases = input()
for i in range(int(testcases)):
    n = input()
    m = input()
    print(path(int(n), int(m)))
